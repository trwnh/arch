#!/bin/bash
BASE="
base base-devel linux linux-lts linux-headers linux-lts-headers linux-firmware
bash nano openssh wget git zip unzip unrar nmap htop
intel-ucode vulkan-intel
networkmanager nm-connection-editor network-manager-applet dnsmasq
ntfs-3g exfat-utils snapraid mergerfs
youtube-dl hugo zola archey3
docker docker-compose nginx
"
AUR="
brother-mfc-7840w brscan3
"

timedatectl set-ntp true

USERNAME=trwnh

echo "Enter a password:"
read PASSWORD

DEVICE=/dev/nvme0n1

echo "First time? [y/N]"
read FIRSTTIME
if [[ $FIRSTTIME == "y" ]]
then
echo "Making partitions..."
sgdisk -Z $DEVICE
parted -s $DEVICE mklabel gpt
sgdisk -n 1:0:+512M -t 1:ef00 -c 1:"ESP" $DEVICE \
       -n 2:0:0 -t 2:8300 -c 2:"Root" $DEVICE
partprobe $DEVICE
echo "Making filesystems..."
mkfs.fat -F32 -n "EFI" /dev/disk/by-partlabel/ESP
mkfs.ext4 -L "Arch" -F /dev/disk/by-partlabel/Root
echo "Drive setup done."
fi

lsblk -f $DEVICE
fdisk -l $DEVICE
read -p "Does this look right? Hit [enter] to move on if so, otherwise quit and start over" CONFIRM

echo -n "Mounting partitions..."
umount -R /mnt
mount -L "Arch" /mnt
mkdir -p /mnt/boot
mount -L "EFI" /mnt/boot
echo "done."

echo -n "Mounting disk array..."
mkdir -p /mnt/disk{1,2,3}
mkdir -p /mnt/parity
mount -L "DTNC" /mnt/disk1
mount -L "SX6C" /mnt/disk2
mount -L "XZ9C" /mnt/disk3
mount -L "83HC" /mnt/parity
echo "done."

echo "Updating pacman mirrorlist..."
pacman -Sy
pacman -S reflector --noconfirm
echo "Sorting mirrorlist..."
reflector --country 'US' -p https --sort rate --save /etc/pacman.d/mirrorlist --verbose
echo "Pacman mirrors synced and sorted."

echo "Bootstrapping mounted system..."
pacstrap /mnt $BASE
echo "Packages installed."

echo -n "Generating filesystem mount table... "
genfstab -L /mnt >> /mnt/etc/fstab
echo "done."

echo -n "Setting up Snapraid and mergerfs... "
cat <<EOF > /mnt/etc/snapraid.conf
disk d1 /mnt/disk1
disk d2 /mnt/disk2
disk d3 /mnt/disk3

parity /mnt/parity/.snapraid.parity

content /mnt/disk1/.snapraid.content
content /mnt/disk2/.snapraid.content
content /mnt/disk3/.snapraid.content
content /var/snapraid/.snapraid.content

exclude /lost+found/
exclude .DS_Store
exclude .Thumbs.db
exclude .fseventsd
exclude .Spotlight-V100
exclude .TemporaryItems
exclude .Trashes
exclude .AppleDB
exclude .AppleDouble
exclude ._AppleDouble
exclude /tmp/
EOF
echo "/mnt/disk* /storage fuse.mergerfs defaults,allow_other,cache.files=off,use_ino,hard_remove,noforget,minfreespace=250G,fsname=mergerfs 0 0" >> /mnt/etc/fstab
echo "done."

echo -n "Setting hosts... "
echo "home" > /mnt/etc/hostname
cat <<EOF > /mnt/etc/hosts
127.0.0.1 localhost
::1 localhost
127.0.1.1 home.localdomain home
192.168.1.66 home.trwnh.com home
192.168.1.66 cloud.trwnh.com cloud
192.168.1.66 jellyfin.trwnh.com jellyfin
192.168.1.66 rss.trwnh.com rss
192.168.1.66 airsonic.trwnh.com airsonic
192.168.1.66 komga.trwnh.com komga
50.116.43.33 sites.trwnh.com sites
192.168.1.66 mc.trwnh.com mc
192.168.1.66 map.mc.trwnh.com map.mc
192.168.1.66 mc.neozones.club map.mc.neozones.club
EOF
echo "done."

echo -n "Setting up DNS... "
cat <<EOF > /mnt/etc/dnsmasq.conf
port=53

server=1.1.1.1
server=8.8.8.8
server=172.98.193.42
server=155.138.240.237
server=147.135.115.88
server=147.135.113.37

local=/lan/
local=/use-application-dns.net/

listen-address=::1,127.0.0.1,192.168.1.66

expand-hosts

domain=trwnh.com

cache-size=5000
EOF
echo "done."

echo "Localizing system..."
arch-chroot /mnt ln -sf /usr/share/zoneinfo/America/Chicago /etc/localtime
echo "Timezone set."
arch-chroot /mnt hwclock --systohc
echo "Synced system clock to hardware clock."
echo "en_US.UTF-8 UTF-8
ar_JO.UTF-8 UTF-8" > /mnt/etc/locale.gen
arch-chroot /mnt locale-gen
echo "LANG=en_US.UTF-8" > /mnt/etc/locale.conf
echo "Locale generated and applied."

echo "Installing bootloader..."
arch-chroot /mnt bootctl install
cat <<EOF > /mnt/boot/loader/entries/arch.conf
title Arch Linux
linux /vmlinuz-linux
initrd /intel-ucode.img
initrd /initramfs-linux.img
options root=LABEL=Arch rw
EOF
cat <<EOF > /mnt/boot/loader/entries/arch-lts.conf
title Arch Linux (LTS)
linux /vmlinuz-linux-lts
initrd /intel-ucode.img
initrd /initramfs-linux-lts.img
options root=LABEL=Arch rw
EOF
cat <<EOF > /mnt/boot/loader/loader.conf
default arch
timeout 5
auto-entries
auto-firmware
editor yes
EOF
echo "Loader files written."

read -p "To avoid having passwd timeout, press [enter] to continue when you're ready to input:" waitforinput

echo "Setting up users..."
arch-chroot /mnt useradd -m -g users -G wheel,ftp,http,sys,docker -s /bin/bash "$USERNAME"
echo "Created user $USERNAME."
arch-chroot /mnt echo "$USERNAME:$PASSWORD" | chpasswd
arch-chroot /mnt echo "root:$PASSWORD" | chpasswd

echo -n "Enabling system services..."
arch-chroot /mnt /bin/bash <<EOF
systemctl enable NetworkManager
systemctl enable systemd-timesyncd
systemctl enable dnsmasq
EOF
echo "done."

echo -n "Changing configuration values..."
sed -i '/#Color/s/^#//g' /mnt/etc/pacman.conf
sed -i '/#\s%wheel\sALL=(ALL)\sALL/s/^#//g' /mnt/etc/sudoers
echo "EDITOR=nano" > /mnt/etc/environment
sed -i "/\[multilib\]/,/Include/"'s/^#//' /mnt/etc/pacman.conf
arch-chroot /mnt /bin/bash <<EOF
sudo -u $USERNAME git config --global user.name a
sudo -u $USERNAME git config --global user.email a@trwnh.com
sudo -u $USERNAME git config --global credential.helper store
EOF
echo "done."

echo "Installing AUR helper..."
arch-chroot /mnt /bin/bash <<EOF
git clone https://aur.archlinux.org/yay-bin.git
chmod -R 777 /yay-bin
cd /yay-bin
sudo -u $USERNAME makepkg -si --noconfirm
cd ..
rm -r /yay-bin
sudo -u $USERNAME yay --gendb
sudo -u $USERNAME yay --devel --nodiffmenu --save
exit
EOF

echo "Installing AUR packages..."
arch-chroot /mnt /bin/bash <<EOF
sudo -u $USERNAME yay -S $AUR
exit
EOF

lpadmin -p MFC7840W -E -v socket://192.168.1.15:9100 -P /usr/share/cups/model/MFC7840W.ppd

echo "Enabling Early KMS for GPU..."
sed -i 's/MODULES=\(\)/MODULES=(i915)/g' /mnt/etc/mkinitcpio.conf
arch-chroot /mnt /bin/bash <<EOF
mkinitcpio -p linux
mkinitcpio -p linux-lts
exit
EOF

echo "Installation finished! You can now unmount and reboot."
