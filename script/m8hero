#!/bin/bash

PACKAGES="
base base-devel realtime-privileges linux linux-lts
intel-ucode vulkan-intel
mesa vulkan-radeon mesa-vdpau
git openssh wget zip unzip unrar nmap htop asp nano reflector
ntfs-3g exfat-utils dosfstools
cups cups-pdf
networkmanager
xfce4 xfce4-goodies lightdm lightdm-gtk-greeter plank gvfs
materia-gtk-theme kvantum-qt5 kvantum-theme-materia faenza-icon-theme papirus-icon-theme
ttf-roboto noto-fonts noto-fonts-cjk noto-fonts-emoji noto-fonts-extra otf-fira-code
pulseaudio pulseaudio-alsa mpv
nm-connection-editor pavucontrol
obs-studio libva-intel-driver libva-mesa-driver vlc libmicrodns srt libnfs libshout aalib chromaprint projectm
krita gimp inkscape sweethome3d pitivi
texlive-most texmaker code  
quassel-client telegram-desktop claws-mail
youtube-dl
transmission-remote-gtk
"
AUR="
firefox-developer-edition
dino-git
enpass-bin
discord
mpc-qt
foobar2000
mp3tag
"
STEAM="
steam
ttf-liberation
xf86-video-amdgpu
lib32-mesa
lib32-vulkan-radeon
lib32-libva-mesa-driver
lib32-mesa-vdpau
"
HOSTNAME=desktop
USERNAME=trwnh

timedatectl set-ntp true

lsblk -f
read -p "Install on which drive? Give identifier in form /dev/name: " ROOTDEV

echo "Making partitions..."
sgdisk -Z $ROOTDEV
parted -s $ROOTDEV mklabel gpt
sgdisk -n 1:0:+512M -t 1:ef00 -c 1:"ESP" $ROOTDEV \
       -n 2:0:0 -t 2:8300 -c 2:"Root" $ROOTDEV
partprobe $ROOTDEV
echo "Making filesystems..."
mkfs.ext4 -L "Arch" -F /dev/disk/by-partlabel/Root
mkfs.fat -F32 -n "EFI" /dev/disk/by-partlabel/ESP
echo "Mounting partitions..."
mount -L "Arch" /mnt
mkdir /mnt/boot
mount -L "EFI" /mnt/boot
echo "Drive setup done."

lsblk -f $ROOTDEV
read -p "Does this look right? Hit [enter] to move on if so, otherwise quit and start over" CONFIRM

echo "Updating pacman mirrorlist..."
pacman -Sy
pacman -S reflector --noconfirm
echo "Sorting mirrorlist..."
reflector --country 'US' -p https --sort rate --save /etc/pacman.d/mirrorlist
echo "Pacman mirrors synced and sorted."

echo "Bootstrapping mounted system..."
pacstrap /mnt $PACKAGES
echo "Packages installed."

echo "Generating filesystem mount table... "
genfstab -L /mnt >> /mnt/etc/fstab
echo "done."

echo -n "Setting hostname... "
echo "$HOSTNAME" > /mnt/etc/hostname
cat <<EOF > /mnt/etc/hosts
127.0.0.1 localhost
::1 localhost
127.0.1.1 $HOSTNAME.localdomain $HOSTNAME
EOF
echo "done."

echo "Localizing system..."
arch-chroot /mnt ln -sf /usr/share/zoneinfo/America/Chicago /etc/localtime
echo "Timezone set."
arch-chroot /mnt hwclock --systohc
echo "Synced system clock to hardware clock."
echo "en_US.UTF-8 UTF-8
ar_JO.UTF-8 UTF-8" > /mnt/etc/locale.gen
arch-chroot /mnt locale-gen
echo "LANG=en_US.UTF-8" > /mnt/etc/locale.conf
echo "Locale generated and applied."

echo "Installing bootloader..."
arch-chroot /mnt bootctl install
cat <<EOF > /mnt/boot/loader/entries/arch.conf
title Arch Linux
linux /vmlinuz-linux
initrd /intel-ucode.img
initrd /initramfs-linux.img
options root=LABEL=Arch rw
EOF
cat <<EOF > /mnt/boot/loader/entries/arch-lts.conf
title Arch Linux (LTS)
linux /vmlinuz-linux-lts
initrd /intel-ucode.img
initrd /initramfs-linux-lts.img
options root=LABEL=Arch rw
EOF
cat <<EOF > /mnt/boot/loader/loader.conf
default arch
timeout 0
editor yes
EOF
echo "Loader files written."

read -p "To avoid having passwd timeout, press [enter] to continue when you're ready to input:" waitforinput

echo "Set a root password."
arch-chroot /mnt passwd
arch-chroot /mnt useradd -m -g users -G wheel,ftp,http,sys,audio,realtime -s /bin/bash "$USERNAME"
echo "Created user $USERNAME."
arch-chroot /mnt passwd $USERNAME

echo -n "Enabling system services..."
arch-chroot /mnt /bin/bash <<EOF
systemctl enable NetworkManager
systemctl enable systemd-timesyncd
systemctl enable org.cups.cupsd
systemctl enable lightdm
EOF
echo "done."

echo -n "Changing configuration values..."
sed -i '/SystemGroup\ssys\sroot/s/root/wheel/g' /mnt/etc/cups/cups-files.conf
sed -i '/#Color/s/^#//g' /mnt/etc/pacman.conf
sed -i '/#\s%wheel\sALL=(ALL)\sALL/s/^#//g' /mnt/etc/sudoers
echo "EDITOR=nano" > /mnt/etc/environment
echo "SWEETHOME3D_JAVA3D=1.5" >> /mnt/etc/environment
sed -i 's/#greeter-session=example-gtk-gnome/greeter-session=lightdm-gtk-greeter/g' /mnt/etc/lightdm/lightdm.conf
arch-chroot /mnt /bin/bash <<EOF
sudo -u $USERNAME git config --global user.name trwnh
sudo -u $USERNAME git config --global user.email a@trwnh.com
sudo -u $USERNAME git config --global credential.helper store
EOF
echo "done."

echo "Installing AUR helper..."
arch-chroot /mnt /bin/bash <<EOF
git clone https://aur.archlinux.org/yay-bin.git
chmod -R 777 /yay-bin
cd /yay-bin
sudo -u $USERNAME makepkg -si --noconfirm
cd ..
rm -r /yay-bin
sudo -u $USERNAME yay --gendb
sudo -u $USERNAME yay --devel --nodiffmenu --save
exit
EOF

echo "Installing AUR packages..."
sed -i "/\[multilib\]/,/Include/"'s/^#//' /mnt/etc/pacman.conf
arch-chroot /mnt /bin/bash <<EOF
sudo -u $USERNAME yay -S $AUR $STEAM
exit
EOF

echo "Enabling Early KMS for GPU..."
sed -i '/MODULES=\(\)/s/\(\)/\(amdgpu i915\)/g' /mnt/etc/pacman.conf
arch-chroot /mnt /bin/bash <<EOF
mkinitcpio -p linux
mkinitcpio -p linux-lts
exit
EOF


echo "Installation finished! You can now unmount and reboot."
