#!/bin/bash

timedatectl set-ntp true

lsblk -f
read -p "Install on which drive? Give identifier in form /dev/name: " ROOTDEV

echo "Making partitions..."
sgdisk -Z $ROOTDEV
parted -s $ROOTDEV mklabel gpt
sgdisk -n 1:0:+512M -t 1:ef00 -c 1:"ESP" $ROOTDEV \
       -n 2:0:0 -t 2:8300 -c 2:"Root" $ROOTDEV
partprobe $ROOTDEV
echo "Making filesystems..."
mkfs.fat -F32 -n "EFI" /dev/disk/by-partlabel/ESP
mkfs.ext4 -L "Arch" -F /dev/disk/by-partlabel/Root
echo "Mounting partitions..."
mount -L "Arch" /mnt
mkdir /mnt/boot
mount -L "EFI" /mnt/boot
echo "Drive setup done."

lsblk -f $ROOTDEV
read -p "Does this look right? Hit [enter] to move on if so, otherwise quit and start over" CONFIRM

echo "Updating pacman mirrorlist..."
pacman -Sy
pacman -S reflector --noconfirm
echo "Sorting mirrorlist..."
reflector --country 'US' -p https --sort rate --save /etc/pacman.d/mirrorlist
echo "Pacman mirrors synced and sorted."

# --- selected packages for installation ---
BASE="base base-devel"
UTIL="openssh wget git zip unzip unrar nmap htop"
HW="intel-ucode vulkan-intel nvidia" # i7-6700k, gtx 1080
NET="networkmanager nm-connection-editor"
PRINT="cups cups-pdf"
FS="ntfs-3g exfat-utils dosfstools"
# --- selected packages for installation ---
PACKAGES="$BASE $UTIL $HW $PRINT $FS $NET"

echo "Bootstrapping mounted system..."
pacstrap /mnt $PACKAGES
echo "Packages installed."
genfstab -L /mnt >> /mnt/etc/fstab
echo "Filesystem table generated."

echo "Entering new root..."
arch-chroot /mnt /bin/bash <<EOF

echo "Localizing system..."
ln -sf /usr/share/zoneinfo/America/Chicago /etc/localtime
echo "Timezone set."
hwclock --systohc
echo "Synced system clock to hardware clock."
echo "en_US.UTF-8 UTF-8
ar_JO.UTF-8 UTF-8" > /etc/locale.gen
locale-gen
localectl set-locale LANG=en_US.UTF-8
echo "Locale generated and applied."

echo "Setting hostname..."
HOSTNAME=desktop
echo "$HOSTNAME" > /etc/hostname
echo "
127.0.0.1 localhost
::1 localhost
127.0.1.1 $HOSTNAME.localdomain $HOSTNAME
" > /etc/hosts

echo "Applying configuration changes..."
sed -i '/SystemGroup\ssys\sroot/s/root/wheel/g' /etc/cups/cups-files.conf
sed -i '/#Color/s/^#//g' /etc/pacman.conf
sed -i '/#\s%wheel\sALL=(ALL)\sALL/s/^#//g' /etc/sudoers
echo "EDITOR=nano" > /etc/environment

echo "Enabling system services..."
systemctl enable NetworkManager
systemctl enable systemd-timesyncd
systemctl enable org.cups.cupsd

echo "Installing bootloader..."
bootctl install
echo "
title Arch Linux
linux /vmlinuz-linux
initrd /intel-ucode.img
initrd /initramfs-linux.img
options root=LABEL=Arch rw
" >> /boot/loader/entries/arch.conf
echo "
default arch
timeout 0
editor yes
" >> /boot/loader/loader.conf
echo "Bootloader installed."
echo "Exiting chroot..."
EOF

read -p "To avoid having passwd timeout, press [enter] to continue when you're ready to input:" waitforinput

arch-chroot /mnt /bin/bash <<EOF
echo "Set a root password."
passwd
# (set root password)
USER=trwnh
useradd -m -g users -s /bin/bash $USER
usermod -aG wheel,ftp,http,sys $USER
echo "Created user $USER."
passwd $USER
# (set user password)

echo "Installing AUR helper..."
sudo -Siu $USER bash 'git clone https://aur.archlinux.org/yay.git && cd yay && makepkg -sic --noconfirm && yay --nodiffmenu --save'
rm -r /home/$USER/yay

echo "Arch Linux is now installed. You can now unmount and reboot."
